apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    // This is the dependency that utilizes the Captiva Mobile SDK.
    compile(name: 'captivamobilesdk', ext: 'aar')
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    androidTestCompile 'com.android.support:support-annotations:24.0.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'

    // add this for intent mocking support
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2'

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    testCompile('com.squareup.assertj:assertj-android:1.1.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.mockito:mockito-core:1.10.19'
    // Optional -- Mockito framework
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'

    //Leak Canary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'

    //Dagger
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
}

// This is required to compile AAR files from the libs folder.
repositories {
    flatDir {
        dirs 'libs'
    }
}

android {
    // This represents the API version of Android that is being compiled against.  It can be as
    // low as the API requirement of the highest feature in the code.  It does affect the Java
    // language version though... so if a later/current Java language version is required, use a
    // more current SDK version.
    compileSdkVersion 21

    // Note that the build tools version supports a lesser compiler version.
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "emc.captiva.mobile.sdksampleapp"
        minSdkVersion 21
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // This is the highest version that the code has been tested to run on.  The code will run
        // on higher versions, but this is the version that has been tested/certified as the target.
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    // We will want to use the same keystore from the old to new version of the application so
    // that upgrades are possible (instead of a side-by-side installation).
    signingConfigs {
        release {
            storeFile file('sdk-sample-app-release.keystore')
            keyAlias 'sdk_sample_app'
            storePassword 'sdksampleappreleasekeystorepassword'
            keyPassword 'sdksampleappreleasekeystorepassword'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
   //    abortOnError false
     //   checkReleaseBuilds false
    }
}

task copyResourcesToClasses(type: Copy) {
    from "${projectDir}/src/androidTest/res"
    into "${buildDir}/intermediates/classes/test/debug/resources"
}

//assembleDebug.dependsOn(copyResourcesToClasses)
//This is needed to run the slower unit tests and instrumental tests